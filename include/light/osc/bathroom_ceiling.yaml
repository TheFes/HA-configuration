platform: template
lights:
  bathroom_osc:
    unique_id: 53302b7a-b3bd-4b30-91d1-e1da098d2467
    friendly_name: "Bathroom Ceiling"
    level_template: "{{ state_attr('light.bathroom', 'brightness') }}"
    value_template: "{{ not is_state('select.bathroom_ceiling_lights_preset', 'uit') }}"
    availability_template: "{{ not states('light.bathroom') in ['unavailable', 'unknown'] }}"
    turn_on:
      - alias: "Set light to default preset"
        service: select.select_option
        data:
          entity_id: select.bathroom_ceiling_lights_preset
          option: "100%"
    turn_off:
      - alias: "Activate off preset"
        service: select.select_option
        data:
          entity_id: select.bathroom_ceiling_lights_preset
          option: "uit"
    set_level:
      - variables:
          preset_values: >
            {% set presets = state_attr('select.bathroom_ceiling_lights_preset', 'options') %}
            {% set ns = namespace(presets=[]) %}
            {% for p in presets %}
              {% set v = 0 if p == 'uit' else p | replace('%', '') | int %}
              {% set ns.presets = ns.presets + [ { 'preset': p, 'value': (v * 2.55) | round(0) } ] %}
            {% endfor %}
            {{ ns.presets }}
      - if: >
          {% set values = preset_values | map(attribute='value') | list %}
          {{ brightness in values }}
        then:
          - alias: "Activate matching preset"
            service: select.select_option
            data:
              entity_id: select.bathroom_ceiling_lights_preset
              option: >
                {{ preset_values | selectattr('value', 'eq', brightness) | map(attribute='preset') | join }}
      - service: light.turn_on
        data:
          entity_id: light.bathroom
          brightness: "{{ brightness }}"
