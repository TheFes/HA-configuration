template:
  - sensor:
      - unique_id: cf3f416f-9385-48df-a37c-a2c5525107a9
        name: Location Phone Martijn BT
        state: &state >
          {% set floor =  {
                            '94:b9:7e:e3:94:c0': 'Zolder',
                            '94:b9:7e:e3:8e:f0': 'Beneden | Trapkast',
                            '94:b9:7e:e3:93:88': 'Eerste verdieping',
                            '94:b9:7e:e3:8e:f0': 'Beneden | TV-Hoek',
                            '00:E0:42:AE:F7:03': 'Thuis'
                          }
          %}
          {% set id = this.attributes.get('id', 'unknown') %}
          {%- set source = state_attr(this.attributes.get('id', ''), 'source') %}
          {%- set source = source[:17] if source else '' %}
          {{ floor[source] if source in floor else 'Niet thuis' }}
        icon: &icon >
          {% if this.state == 'Zolder' %}
            mdi:home-floor-2
          {% elif this.state == 'Eerste verdieping' %}
            mdi:home-floor-1
          {% elif this.state == 'Beneden' %}
            mdi:home-floor-0
          {% elif this.state == 'Thuis' %}
            mdi:home
          {% else %}
            mdi:tree
          {% endif %}
        attributes:
          id: "device_tracker.pixel_7_pro_beacon"
      - unique_id: b90950d1-0504-436d-a5e0-b9fd3fc83695
        name: Location Watch Martijn BT
        state: *state
        icon: *icon
        attributes:
          id: "device_tracker.pixel_watch_beacon"

automation:
  - id: 22a1f4bd-d654-480e-a0d7-c3786bdee7f9
    alias: Test Automation BT location change
    trigger:
      - platform: state
        entity_id:
          - sensor.location_phone_martijn_bt
          - sensor.location_watch_martijn_bt
        not_from: "unavailable"
        not_to: "unavailable"
        variables:
          device: "{{ 'telefoon' if 'phone' in trigger.entity_id else 'horloge' }}"
    action:
      - service: notify.mobile_app_pixel_7_pro
        data:
          message: De state van {{ device }} is van {{ trigger.from_state.state }} naar {{ trigger.to_state.state }} gegaan.
          data:
            channel: "Location {{ device }}"
            tag: "location_{{ device }}"
            ttl: 0
            priority: high
            notification_icon: mdi:test-tube
