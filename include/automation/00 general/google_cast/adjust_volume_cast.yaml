id: 8b5eb1fe-6ced-4435-82a0-7b4b6c62e832
alias: "00 - Adjust volume when casting"
mode: parallel
max_exceeded: silent
trigger:
  - platform: state
    id: playing
    entity_id:
      - media_player.woonkamer_home
      - media_player.keuken_hub
      - media_player.floris_mini
      - media_player.pepijn_mini
      - media_player.slaapkamer_hub
      - media_player.zolder_werkkamer_stereo
      - media_player.werkkamer_marleen_mini
    to: "playing"
  - platform: state
    id: stopped_playing
    entity_id:
      - media_player.woonkamer_home
      - media_player.keuken_hub
      - media_player.floris_mini
      - media_player.pepijn_mini
      - media_player.slaapkamer_hub
      - media_player.zolder_werkkamer_stereo
      - media_player.werkkamer_marleen_mini
    to:
      - "off"
      - "idle"
    for: "00:00:11"
condition:
  - alias: "Previous state not unavailable"
    condition: template
    value_template: "{{ trigger.from_state.state not in ['unavailable', 'unkown'] }}"
  - alias: "No resume active?"
    condition: template
    value_template: >
      {%- set groups = integration_entities('group') | select('search', 'group.resume_script_active') | list %}
      {%- set entities = expand(groups) | map(attribute='entity_id') | list %}
      {{ not trigger.entity_id in entities }}
  - alias: "After wake-up Pepijn"
    condition: template
    value_template: >
      {% set wakeup = today_at(states('input_datetime.pepijn_time_awake')) %}
      {{ now() > wakeup }}
variables:
  player: "{{ trigger.entity_id }}"
  device: "{{ trigger.entity_id | replace('media_player.', '') }}"
  app: "{{ trigger.to_state.attributes.app_name | default('geen', true) }}"
  type: "{{ trigger.to_state.attributes.media_content_type | default('geen', true) }}"
  state_to: "{{ trigger.to_state.state }}"
  volume: "{{ state_attr(trigger.to_state.entity_id, 'volume_level') | round(2, default=0.25) }}"
  binary_sensor: "{{ trigger.to_state.entity_id | replace('media_player', 'binary_sensor') }}"
action:
  - alias: "On or off?"
    choose:
      - conditions:
          - alias: "Trigger to playing?"
            condition: trigger
            id: playing
          - alias: "Just recently playing?"
            condition: template
            value_template: "{{ is_state(binary_sensor, 'off') }}"
        sequence:
          - alias: "News or Music?"
            choose:
              - conditions:
                  - alias: "News?"
                    condition: template
                    value_template: "{{ app == 'Google News' }}"
                sequence:
                  - alias: "Set volume for news"
                    service: media_player.volume_set
                    target:
                      entity_id: "{{ player }}"
                    data:
                      volume_level: 0.3
              - conditions:
                  - alias: "Music?"
                    condition: template
                    value_template: "{{ type == 'music' }}"
                sequence:
                  - alias: "Set volume for music"
                    service: media_player.volume_set
                    target:
                      entity_id: "{{ player }}"
                    data:
                      volume_level: 0.25
      - conditions:
          - alias: "Playing stopped?"
            condition: trigger
            id: stopped_playing
        sequence:
          - alias: "Set volume to default"
            service: media_player.volume_set
            target:
              entity_id: "{{ player }}"
            data:
              volume_level: "{{ state_attr(binary_sensor, 'volume') | float(0.25) }}"
