template:
  - sensor:
      # template sensors for area state use /config/custom_templates/helpers.jinja
      - unique_id: area_data_template_slaapkamer_floris
        name: >
          {% set area_name = 'Floris' %}
          {{ ('Area Data ' ~ area_name) if this.state == 'unknown' else area_name }}
        icon: mdi:bed
        state: >
          {% from 'helpers.jinja' import area_data %}
          {{ area_data(this.name, 'icon_color', binary=false) }}
        attributes:
          text: >
            {% from 'helpers.jinja' import area_data %}
            {{ area_data(this.name, binary=false) }}
          device_list: >
            {% from 'helpers.jinja' import area_data %}
            {{ area_data(this.name, 'device_list', binary=false) }}

      - unique_id: area_data_template_speelhoek
        name: >
          {% set area_name = 'Speelhoek' %}
          {{ ('Area Data ' ~ area_name) if this.state == 'unknown' else area_name }}
        icon: mdi:toy-brick
        state: >
          {% from 'helpers.jinja' import area_data %}
          {{ area_data(this.name, 'icon_color', binary=false, sensor=false, media=false) }}
        attributes:
          text: >
            {% from 'helpers.jinja' import area_data %}
            {{ area_data(this.name, binary=false) }}
          device_list: >
            {% from 'helpers.jinja' import area_data %}
            {{ area_data(this.name, 'device_list', binary=false, sensor=false, media=false) }}

      - unique_id: area_data_template_wc
        name: >
          {% set area_name = 'WC' %}
          {{ ('Area Data ' ~ area_name) if this.state == 'unknown' else area_name }}
        icon: mdi:toilet
        state: >
          {% from 'helpers.jinja' import area_data %}
          {{ area_data(this.name, 'icon_color', media=false, sensor=false) }}
        attributes:
          text: >
            {% from 'helpers.jinja' import area_data %}
            {{ area_data(this.name, media=false, sensor=false) }}
          device_list: >
            {% from 'helpers.jinja' import area_data %}
            {{ area_data(this.name, 'device_list', media=false, sensor=false) }}

      - unique_id: area_data_template_hal
        name: >
          {% set area_name = 'Hal' %}
          {{ ('Area Data ' ~ area_name) if this.state == 'unknown' else area_name }}
        icon: mdi:door
        state: >
          {% from 'helpers.jinja' import area_data %}
          {{ area_data(this.name, 'icon_color', binary=false, media=false, sensor=false) }}
        attributes:
          text: >
            {% from 'helpers.jinja' import area_data %}
            {{ area_data(this.name, binary=false, media=false, sensor=false) }}
          device_list: >
            {% from 'helpers.jinja' import area_data %}
            {{ area_data(this.name, 'device_list', binary=false, media=false, sensor=false) }}

      - unique_id: area_data_template_keuken
        name: >
          {% set area_name = 'Keuken' %}
          {{ ('Area Data ' ~ area_name) if this.state == 'unknown' else area_name }}
        icon: mdi:countertop
        state: >
          {% from 'helpers.jinja' import area_data %}
          {{ area_data([this.name, 'Eettafel'], 'icon_color', binary=false, sensor=false) }}
        attributes:
          text: >
            {% from 'helpers.jinja' import area_data %}
            {{ area_data([this.name, 'Eettafel'], binary=false, sensor=true) }}
          device_list: >
            {% from 'helpers.jinja' import area_data %}
            {{ area_data([this.name, 'Eettafel'], 'device_list', binary=false, sensor=true) }}

      - unique_id: area_data_template_slaapkamer_pepijn
        name: >
          {% set area_name = 'Pepijn' %}
          {{ ('Area Data ' ~ area_name) if this.state == 'unknown' else area_name }}
        icon: mdi:unicorn
        state: >
          {% from 'helpers.jinja' import area_data %}
          {{ area_data(this.name, 'icon_color', binary=false) }}
        attributes:
          text: >
            {% from 'helpers.jinja' import area_data %}
            {{ area_data(this.name, binary=false) }}
          device_list: >
            {% from 'helpers.jinja' import area_data %}
            {{ area_data(this.name, 'device_list', binary=false) }}

      - unique_id: area_data_template_trapkast
        name: >
          {% set area_name = 'Trapkast' %}
          {{ ('Area Data ' ~ area_name) if this.state == 'unknown' else area_name }}
        icon: mdi:stairs
        state: >
          {% from 'helpers.jinja' import area_data %}
          {{ area_data(this.name, 'icon_color', sensor=false, media=false) }}
        attributes:
          text: >
            {% from 'helpers.jinja' import area_data %}
            {{ area_data(this.name, sensor=false, media=false) }}
          device_list: >
            {% from 'helpers.jinja' import area_data %}
            {{ area_data(this.name, 'device_list', sensor=false, media=false) }}

      - unique_id: area_data_template_tuin
        name: >
          {% set area_name = 'Tuin' %}
          {{ ('Area Data ' ~ area_name) if this.state == 'unknown' else area_name }}
        icon: mdi:tree
        state: >
          {% from 'helpers.jinja' import area_data %}
          {{ area_data(this.name, 'icon_color', binary=false, media=false, sensor=false) }}
        attributes:
          text: >
            {% from 'helpers.jinja' import area_data %}
            {{ area_data(this.name, binary=false, media=false, sensor=false) }}
          device_list: >
            {% from 'helpers.jinja' import area_data %}
            {{ area_data(this.name, 'device_list', binary=false, media=false, sensor=false) }}

      - unique_id: area_data_template_woonkamer
        name: >
          {% set area_name = 'Woonkamer' %}
          {{ ('Area Data ' ~ area_name) if this.state == 'unknown' else area_name }}
        icon: mdi:sofa
        state: >
          {% from 'helpers.jinja' import area_data %}
          {{ area_data(this.name, 'icon_color', binary=false) }}
        attributes:
          text: >
            {% from 'helpers.jinja' import area_data %}
            {{ area_data(this.name, binary=false) }}
          device_list: >
            {% from 'helpers.jinja' import area_data %}
            {{ area_data(this.name, 'device_list', binary=false) }}

      - unique_id: area_data_template_overloop
        name: >
          {% set area_name = 'Overloop' %}
          {{ ('Area Data ' ~ area_name) if this.state == 'unknown' else area_name }}
        icon: mdi:fence
        state: >
          {% from 'helpers.jinja' import area_data %}
          {{ area_data(this.name, 'icon_color', binary=false, media=false, sensor=false) }}
        attributes:
          text: >
            {% from 'helpers.jinja' import area_data %}
            {{ area_data(this.name, binary=false, media=false, sensor=false) }}
          device_list: >
            {% from 'helpers.jinja' import area_data %}
            {{ area_data(this.name, 'device_list', binary=false, media=false, sensor=false) }}

      - unique_id: area_data_template_badkamer
        name: >
          {% set area_name = 'Badkamer' %}
          {{ ('Area Data ' ~ area_name) if this.state == 'unknown' else area_name }}
        icon: mdi:bathtub
        state: >
          {% from 'helpers.jinja' import area_data %}
          {{ area_data(this.name, 'icon_color', binary=false, media=false) }}
        attributes:
          text: >
            {% from 'helpers.jinja' import area_data %}
            {{ area_data(this.name, binary=false, media=false) }}
          device_list: >
            {% from 'helpers.jinja' import area_data %}
            {{ area_data(this.name, 'device_list', binary=false, media=false) }}

      - unique_id: area_data_template_overloop_zolder
        name: >
          {% set area_name = 'Overloop Zolder' %}
          {{ ('Area Data ' ~ area_name) if this.state == 'unknown' else area_name }}
        icon: mdi:fence
        state: >
          {% from 'helpers.jinja' import area_data %}
          {{ area_data(this.name, 'icon_color', binary=false, media=false, sensor=false) }}
        attributes:
          text: >
            {% from 'helpers.jinja' import area_data %}
            {{ area_data(this.name, binary=false, media=false, sensor=false) }}
          device_list: >
            {% from 'helpers.jinja' import area_data %}
            {{ area_data(this.name, 'device_list', binary=false, media=false, sensor=false) }}

      - unique_id: area_data_template_technische_ruimte_zolder
        name: >
          {% set area_name = 'Technische Ruimte' %}
          {{ ('Area Data ' ~ area_name) if this.state == 'unknown' else area_name }}
        icon: mdi:radiator
        state: >
          {% from 'helpers.jinja' import area_data %}
          {{ area_data(this.name, 'icon_color', media=false) }}
        attributes:
          text: >
            {% from 'helpers.jinja' import area_data %}
            {{ area_data(this.name, media=false) }}
          device_list: >
            {% from 'helpers.jinja' import area_data %}
            {{ area_data(this.name, 'device_list', media=false) }}

      - unique_id: area_data_template_werkkamer_martijn
        name: >
          {% set area_name = 'Werkkamer Martijn' %}
          {{ ('Area Data ' ~ area_name) if this.state == 'unknown' else area_name }}
        icon: mdi:desk
        state: >
          {% from 'helpers.jinja' import area_data %}
          {{ area_data([this.name, 'Knieschot'], 'icon_color') }}
        attributes:
          text: >
            {% from 'helpers.jinja' import area_data %}
            {{ area_data([this.name, 'Knieschot']) }}
          device_list: >
            {% from 'helpers.jinja' import area_data %}
            {{ area_data([this.name, 'Knieschot'], 'device_list') }}

      - unique_id: area_data_template_badkamer_zolder
        name: >
          {% set area_name = 'Badkamer Zolder' %}
          {{ ('Area Data ' ~ area_name) if this.state == 'unknown' else area_name }}
        icon: mdi:toilet
        state: >
          {% from 'helpers.jinja' import area_data %}
          {{ area_data(this.name, 'icon_color', binary=false, media=false) }}
        attributes:
          text: >
            {% from 'helpers.jinja' import area_data %}
            {{ area_data(this.name, binary=false, media=false) }}
          device_list: >
            {% from 'helpers.jinja' import area_data %}
            {{ area_data(this.name, 'device_list', binary=false, media=false) }}

      - unique_id: area_data_template_slaapkamer_zolder
        name: >
          {% set area_name = 'Slaapkamer Zolder' %}
          {{ ('Area Data ' ~ area_name) if this.state == 'unknown' else area_name }}
        icon: mdi:bed-double
        state: >
          {% from 'helpers.jinja' import area_data %}
          {{ area_data(this.name, 'icon_color', binary=false) }}
        attributes:
          text: >
            {% from 'helpers.jinja' import area_data %}
            {{ area_data(this.name, binary=false) }}
          device_list: >
            {% from 'helpers.jinja' import area_data %}
            {{ area_data(this.name, 'device_list', binary=false) }}

      - unique_id: area_data_template_werkkamer_marleen
        name: >
          {% set area_name = 'Werkkamer Marleen' %}
          {{ ('Area Data ' ~ area_name) if this.state == 'unknown' else area_name }}
        icon: mdi:desk
        state: >
          {% from 'helpers.jinja' import area_data %}
          {{ area_data(this.name, 'icon_color', binary=false) }}
        attributes:
          text: >
            {% from 'helpers.jinja' import area_data %}
            {{ area_data(this.name, binary=false) }}
          device_list: >
            {% from 'helpers.jinja' import area_data %}
            {{ area_data(this.name, 'device_list', binary=false) }}

      - unique_id: area_data_template_vliering
        name: >
          {% set area_name = 'Vliering' %}
          {{ ('Area Data ' ~ area_name) if this.state == 'unknown' else area_name }}
        icon: mdi:home-floor-3
        state: >
          {% from 'helpers.jinja' import area_data %}
          {{ area_data(this.name, 'icon_color', media=false) }}
        attributes:
          text: >
            {% from 'helpers.jinja' import area_data %}
            {{ area_data(this.name, media=false) }}
          device_list: >
            {% from 'helpers.jinja' import area_data %}
            {{ area_data(this.name, 'device_list', media=false) }}

      # template sensors for floor mini badges
      - unique_id: floor_data_eerste_verdieping_temperature
        name: Floor Data Eerste Verdieping Temperature
        device_class: temperature
        unit_of_measurement: "°C"
        state: &floor_state >
          {% set class = this.entity_id.split('_') | last %}
          {% set floor = (this.entity_id | replace('sensor.floor_data_', '')).split('_')[:-1] | join('_') %}
          {% set floor_devices = floor_areas(floor)
                                  | map('area_entities')
                                  | sum(start=[])
                                  | map('device_id')
                                  | unique
                                  | select('in', label_devices('area_data'))
                                  | list
          %}
          {% set floor_entities = floor_devices | map('device_entities') | sum(start=[]) %}
          {{ floor_entities
              | select('has_value')
              | select('is_state_attr', 'device_class', class)
              | map('states')
              | map('float')
              | average(-1)
              | round(1 if class == 'temperature' else 0)
          }}

      - unique_id: floor_data_eerste_verdieping_humidity
        name: Floor Data Eerste Verdieping Humidity
        device_class: humidity
        unit_of_measurement: "%"
        state: *floor_state

      - unique_id: floor_data_eerste_verdieping_illuminance
        name: Floor Data Eerste Verdieping Illuminance
        device_class: illuminance
        unit_of_measurement: "lx"
        state: *floor_state

      - unique_id: floor_data_zolder_temperature
        name: Floor Data Zolder Temperature
        device_class: temperature
        unit_of_measurement: "°C"
        state: *floor_state

      - unique_id: floor_data_zolder_humidity
        name: Floor Data Zolder Humidity
        device_class: humidity
        unit_of_measurement: "%"
        state: *floor_state

      - unique_id: floor_data_zolder_illuminance
        name: Floor Data Zolder Illuminance
        device_class: illuminance
        unit_of_measurement: "lx"
        state: *floor_state

      # sensors for dashboard messages
      - unique_id: d187a334-2fb9-4045-9904-68efdaa4955f
        icon: mdi:delete
        name: >
          {% set trash_name = state_attr(this.attributes.get('next', 'onbekend'), 'friendly_name') %}
          {%- set name = this.state ~ ': ' ~ trash_name %}
          {{ 'Dashboard Next Trash' if this.state == 'unknown' else name }}
        state: >
          {{ states(this.attributes.get('next', 'onbekend')) }}
        attributes:
          next: >
            {%- set sensors = [ 'sensor.afval_papier_en_pmd', 'sensor.afval_rest_en_gft' ] %}
            {{
              sensors
                | expand
                | sort(attribute='attributes.collection_date')
                | map(attribute='entity_id')
                | first
                | default('onbekend')
                | join
            }}
      - unique_id: 42e15a4b-cd5b-4b1f-aea1-606768190cfe
        name: Dashboard ETA Martijn
        icon: "{{ 'mdi:bike' if is_state('input_boolean.martijn_fiets', 'on') else 'mdi:car' }}"
        state: >
          {% set eta = (state_attr('sensor.variables', 'variables')| default({}, true)).get('eta_martijn', 'Niet onderweg') %}
          {% if eta != 'Niet onderweg' %}
            ETA Martijn: {{ eta }} 
          {% else %}
            {{ eta }}
          {% endif %}
      - unique_id: bd045940-59e0-43f8-98eb-ecec92ac86d1
        name: Dashboard ETA Marleen
        icon: mdi:car
        state: >
          {% set eta = (state_attr('sensor.variables', 'variables')| default({}, true)).get('eta_marleen', 'Niet onderweg') %}
          {% if eta != 'Niet onderweg' %}
            ETA Marleen: {{ eta }} 
          {% else %}
            {{ eta }}
          {% endif %}

      # template sensors for bedroom temp scores
      - unique_id: 91dfc560-f68d-4537-93e0-bc6482b37833
        name: "{{ 'Dashboard Bedroom ' if this.state == 'unknown' }}Temp"
        icon: mdi:thermometer
        state: >
          {% set value = states('sensor.awair_slaapkamer_temperature') | float %}
          {% set mapping = 
            [
              {
                'start': 0,
                'end': 9,
                'color': 'red'
              },
              {
                'start': 9,
                'end': 11,
                'color': 'deep-orange'
              },
              {
                'start': 11,
                'end': 17,
                'color': 'orange'
              },
              {
                'start': 17,
                'end': 18,
                'color': 'yellow'
              },
              {
                'start':18,
                'end': 25,
                'color': 'green'
              },
              {
                'start': 25,
                'end': 26,
                'color': 'yellow'
              },
              {
                'start': 26,
                'end': 32,
                'color': 'orange'
              },
              {
                'start': 32,
                'end': 34,
                'color': 'deep-orange'
              },
              {
                'start': 34,
                'end': 50,
                'color': 'red'
              }
            ]
          %}
          {{ mapping
              | selectattr('start', '<=', value)
              | selectattr('end', '>', value)
              | map(attribute='color')
              | first
          }}
        availability: "{{ 'sensor.awair_slaapkamer_temperature' | has_value }}"
        attributes:
          value: "{{ states('sensor.awair_slaapkamer_temperature', with_unit=true) }}"
      - unique_id: f894dddf-f242-4b87-b2a1-c5eb8ac11a7b
        name: "{{ 'Dashboard Bedroom ' if this.state == 'unknown' }}Hum"
        icon: mdi:water-percent
        state: >
          {% set value = states('sensor.awair_slaapkamer_humidity') | float %}
          {% set mapping = 
            [
              {
                'start': 0,
                'end': 15,
                'color': 'red'
              },
              {
                'start': 15,
                'end': 20,
                'color': 'deep-orange'
              },
              {
                'start': 20,
                'end': 35,
                'color': 'orange'
              },
              {
                'start': 35,
                'end': 40,
                'color': 'yellow'
              },
              {
                'start':40,
                'end': 50,
                'color': 'green'
              },
              {
                'start': 50,
                'end': 60,
                'color': 'yellow'
              },
              {
                'start': 60,
                'end': 65,
                'color': 'orange'
              },
              {
                'start': 65,
                'end': 80,
                'color': 'deep-orange'
              },
              {
                'start': 80,
                'end': 100,
                'color': 'red'
              }
            ]
          %}
          {{ mapping
              | selectattr('start', '<=', value)
              | selectattr('end', '>', value)
              | map(attribute='color')
              | first
          }}
        availability: "{{ 'sensor.awair_slaapkamer_humidity' | has_value }}"
        attributes:
          value: "{{ states('sensor.awair_slaapkamer_humidity', with_unit=true) }}"
      - unique_id: 4825408a-a35b-4cd5-b67d-18cc4e8a9838
        name: "{{ 'Dashboard Bedroom ' if this.state == 'unknown' }}CO2"
        icon: mdi:molecule-co2
        state: >
          {% set s = states('sensor.awair_slaapkamer_carbon_dioxide') | float %}
          {% if s < 600 %}
            green
          {% elif s < 1000 %}
            yellow
          {% elif s < 1500 %}
            orange
          {% elif s < 2500 %}
            deep-orange
          {% else %}
            red
          {% endif %}
        availability: "{{ 'sensor.awair_slaapkamer_carbon_dioxide' | has_value }}"
        attributes:
          value: "{{ states('sensor.awair_slaapkamer_carbon_dioxide', with_unit=true) }}"
      - unique_id: f340c961-5998-482f-837b-da374de34170
        name: "{{ 'Dashboard Bedroom ' if this.state == 'unknown' }}PM2.5"
        icon: mdi:molecule
        state: >
          {% set s = states('sensor.awair_slaapkamer_volatile_organic_compounds') | float %}
          {% if s < 333 %}
            green
          {% elif s < 1000 %}
            yellow
          {% elif s < 3333 %}
            orange
          {% elif s < 8332 %}
            deep-orange
          {% else %}
            red
          {% endif %}
        availability: "{{ 'sensor.awair_slaapkamer_volatile_organic_compounds' | has_value }}"
        attributes:
          value: "{{ states('sensor.awair_slaapkamer_volatile_organic_compounds', with_unit=true) }}"
      - unique_id: aa0cc43d-a2da-4ef0-baef-87578d9789b6
        name: "{{ 'Dashboard Bedroom ' if this.state == 'unknown' }}TVOCs"
        icon: mdi:molecule
        state: >
          {% set s2 = states('sensor.luchtreiniger_slaapkamer_pm25') | float(-1) %}
          {% set s = states('sensor.awair_slaapkamer_pm2_5') | float if s2 < 0 else s2 %}
          {% if s < 15 %}
            green
          {% elif s < 35 %}
            yellow
          {% elif s < 55 %}
            orange
          {% elif s < 75 %}
            deep-orange
          {% else %}
            red
          {% endif %}
        availability: "{{ 'sensor.awair_slaapkamer_pm2_5' | has_value or states('sensor.luchtreiniger_slaapkamer_pm25') | float(-1) >= 0 }}"
        attributes:
          value: >
            {% set s2 = states('sensor.luchtreiniger_slaapkamer_pm25') | float(-1) %}
            {{ states('sensor.awair_slaapkamer_pm2_5', with_unit=true) if s2 < 0 else states('sensor.luchtreiniger_slaapkamer_pm25', with_unit=true) }}

  - binary_sensor:
      # template binary sensors to revert active icon color for covers
      - unique_id: 21bc3453-4f48-479a-a216-f50fdc23b79b
        name: Cover Floris Dashboard Helper
        state: "{{ state_attr('cover.floris', 'current_position') | default(0, true) < 100 }}"
        icon: "{{ 'mdi:blinds' if this.state | bool(false) else 'mdi:blinds-open' }}"
        availability: "{{ 'cover.floris' | has_value }}"
      - unique_id: fca7cce8-d0e7-434f-9b7e-f5a2ea24e7e8
        name: Cover Overloop Zolder Dashboard Helper
        state: "{{ state_attr('cover.overloop_zolder_template', 'current_position') | default(0, true) < 100 }}"
        icon: "{{ 'mdi:blinds' if this.state | bool(false) else 'mdi:blinds-open' }}"
        availability: "{{ 'cover.overloop_zolder' | has_value }}"
      - unique_id: c59709fc-ab8b-495c-830f-337e87696108
        name: Cover Pepijn Dashboard Helper
        state: "{{ state_attr('cover.pepijn_template', 'current_position') | default(0, true) < 100 }}"
        icon: "{{ 'mdi:blinds' if this.state | bool(false) else 'mdi:blinds-open' }}"
        availability: "{{ 'cover.pepijn' | has_value }}"
      - unique_id: 89c3ae41-1ba5-483f-8108-d7e6d04af2de
        name: Cover Werkkamer Marleen Helper
        state: "{{ state_attr('cover.werkkamer_marleen', 'current_position') | default(0, true) < 100 }}"
        icon: "{{ 'mdi:blinds' if this.state | bool(false) else 'mdi:blinds-open' }}"
        availability: "{{ 'cover.werkkamer_marleen' | has_value }}"
      - unique_id: 8c9fbbee-8914-41b8-9310-3a1151c9ec22
        name: Cover Slaapkamer Zolder
        state: "{{ state_attr('cover.slaapkamer_zolder_template', 'current_position') | default(0, true) < 100 }}"
        icon: "{{ 'mdi:blinds' if this.state | bool(false) else 'mdi:blinds-open' }}"
        availability: "{{ 'cover.slaapkamer_zolder_template' | has_value }}"
      # other binary sensors for dashboard
      - unique_id: dd81d5ca-6c8a-4824-9611-75cfd6a1d368
        name: Dashboard Afzuigkap
        icon: "{{ 'mdi:pot-steam' if is_state('sensor.extractor_hood_status', 'Afzuigen') else 'mdi:pot-steam-outline' }}"
        state: "{{ is_state('switch.afzuigkap', 'on') }}"
        attributes:
          text: >
            {{ states('sensor.extractor_hood_status') if is_state('switch.afzuigkap', 'on') else 'Uit' }} {{ (' | ' ~ states('sensor.afzuigkap_power', with_unit=true)) if is_state('switch.afzuigkap', 'on') }}
      - unique_id: 9ee78bc8-1810-460a-9621-0fb5455c7558
        name: Dashboard Espresso
        icon: "{{ 'mdi:coffee-maker' if states('sensor.espresso_power') | float(0) > 0 else 'mdi:coffee-maker-outline' }}"
        state: "{{ is_state('switch.espresso', 'on') }}"
        attributes:
          text: >
            {% set power = states('sensor.espresso_power') | float(0) | round(0) %}
            {% if is_state('switch.espresso', 'on') and power > 0 %}
              Actief | {{ power }} W
            {% elif is_state('switch.espresso', 'on') %}
              Inactief | {{ power }} W
            {% else %}
              Uit
            {% endif %}
      - unique_id: 82976f0d-c03a-4b2d-9a6c-1af7cda11946
        name: Dashboard Waterkoker
        icon: "{{ 'mdi:kettle' if states('sensor.waterkoker_power') | float(0) > 0 else 'mdi:kettle-outline' }}"
        state: "{{ is_state('switch.waterkoker', 'on') }}"
        attributes:
          text: >
            {% set power = states('sensor.waterkoker_power') | float(0) | round(0) %}
            {% if is_state('switch.waterkoker', 'on') and power > 0 %}
              Actief | {{ power }} W
            {% elif is_state('switch.waterkoker', 'on') %}
              Inactief | {{ power }} W
            {% else %}
              Uit
            {% endif %}

      # binary sensor for dasbboard messages
      - unique_id: 262f459f-0d43-4b72-b8b1-67667fe73f5f
        icon: mdi:dishwasher
        name: >
          {% if this.state == 'unknown' %}
            Dashboard Dishwasher Status
          {% else %}
            {%- if is_state('binary_sensor.dishwasher_active', 'on') %}
              {%- set time_set = as_datetime(states('sensor.dishwasher_end_time')) %}
              {%- set time_set = as_local(time_set) if time_set is not none else as_datetime(1) %}
              {%- if now() < time_set %}
                {%- set seconds = (time_set - now()).total_seconds() %}
                {%- set hours = (seconds / 3600) | int %}
                {%- set minutes = (((seconds / 3600) - hours) * 60) | int %}
                {%- set program = states('input_select.dishwasher_program') %}
                {%- set extra = states('input_select.dishwasher_program_extra') %}
                {%- set extra = '' if extra == 'Normaal' else ' - ' ~ extra %}
                {%- set program = program ~ extra %}
                {{ 'Vaatwasser klaar rond ' ~ as_datetime(states('sensor.dishwasher_end_time')).strftime('%H:%M ') ~ '(' ~ program ~ ')' }}
              {%- else %}
                {{ 'Vaatwasser is nu elk moment klaar' }}
              {%- endif %}
            {% else %}
              Inactief
            {%- endif %}
          {% endif %}
        state: "{{ is_state('binary_sensor.dishwasher_active', 'on') }}"
      - unique_id: 93b78f97-3217-4152-aa12-51fe7166a972
        name: >
          {% if this.state == 'unknown' %}
            Dashboard Washing Machine Status
          {% else %}
            {%- if is_state('sensor.wasmachine', 'on') %}
              {%- set h, m, s = states('sensor.wasmachine_remain_time').split(':') | map('int') %}
              {%- set total = h * 3600 + m *60 %}
              {{ 'Wasmachine klaar rond ' ~ (now() + timedelta(seconds = total)).strftime('%H:%M') }}
            {%- else -%}
              Inactief
            {%- endif %}
          {% endif %}
        icon: mdi:washing-machine
        state: >
          {{ is_state('sensor.wasmachine', 'on') }}

      - unique_id: sensor_anniversary_martijn
        name: Martijn
        attributes:
          source: sensor.anniversary_martijn
          text: &anniversary_text >
            {%- set source = this.attributes.get('source', 'not ready') %}
            {%- set d_h = state_attr(source, 'days_until_half_anniversary') | default(999, true) %}
            {%- set h = d_h < states(source) | int(0) %}
            {%- set d = [states(source) | int(15), d_h] | min %}
            {%- set c = state_attr(source, 'current_years') %}
            {%- set y = c if c else none %}
            {%- set y = y + (0.5 if h else 1 if d != 0 else 0) if y is not none %}
            {%- if d <= 1 %}
                {%- set days = [' Vandaag: ', ' Morgen '][d] %}
            {%- else %}
                {%- set days = ' Over ' ~ d ~ ' dagen' %}
            {%- endif %}
            {{ days }} {{ ('(' ~ y ~ ' jaar)') if y }}
        <<: &anniversary_config
          state: >
            {%- set source = this.attributes.get('source', 'not ready') %}
            {{ states(source) | int(15) <= 14 }}
          icon: >
            {%- set fixed_icons = {
                                    'Eerste date': 'mdi:heart-multiple',
                                    'Sinterklaas': 'mdi:gift-open'
                                  } %}
            {%- set random_icon = ['mdi:cake', 'mdi:balloon', 'mdi:party-popper', 'mdi:gift'] | random %}
            {{ fixed_icons[this.name] | default(random_icon) }}

      - unique_id: sensor_anniversary_marleen
        name: Marleen
        attributes:
          source: sensor.anniversary_marleen
          text: *anniversary_text
        <<: *anniversary_config

      - unique_id: sensor_anniversary_pepijn
        name: Pepijn
        attributes:
          source: sensor.anniversary_pepijn
          text: *anniversary_text
        <<: *anniversary_config

      - unique_id: sensor_anniversary_floris
        name: Floris
        attributes:
          source: sensor.anniversary_floris
          text: *anniversary_text
        <<: *anniversary_config

      - unique_id: sensor_anniversary_eerste_date
        name: Eerste Date
        attributes:
          source: sensor.anniversary_eerste_date
          text: *anniversary_text
        <<: *anniversary_config

      - unique_id: sensor_anniversary_sinterklaas
        name: Sinterklaas
        attributes:
          source: sensor.anniversary_sinterklaas
          text: *anniversary_text
        <<: *anniversary_config

      - unique_id: ebdb8afc-4d13-4469-a353-8ba6b49c5618
        name: Dashboard Werkkamer Martijn Satellite Available
        state: "{{ 'media_player.martijn' | has_value }}"
        icon: mdi:cast

      # dummy binary sensors for tile cards
      - unique_id: 815dab72-ae42-4fdd-9836-c690237b5879
        name: Dummy Active
        state: "{{ true }}"
        icon: mdi:play
      - unique_id: 9be8e45b-9038-482f-b120-adf5a24c077d
        name: Dummy Inactive
        state: "{{ false }}"
        icon: mdi:stop

  - switch:
      - unique_id: 98efcbde-ffbe-4050-98f9-cf60275a8f81
        name: Kitchen Appliances
        state: >
          {{ is_state('switch.groep_keuken', 'on') }}
        icon: >
          {% if is_state('switch.espresso', 'on') and is_state('switch.waterkoker', 'on') %}
            mdi:coffee
          {% elif is_state('switch.espresso', 'on') %}
            mdi:coffee-maker
          {% elif is_state('switch.waterkoker', 'on') %}
            mdi:kettle
          {% else %}
            mdi:coffee-outline
          {% endif %}
        turn_on:
          - action: switch.turn_on
            target:
              entity_id: switch.groep_keuken
        turn_off:
          - action: switch.turn_off
            target:
              entity_id: switch.groep_keuken
        availability: "{{ 'switch.groep_keuken' | has_value }}"

# small script to toggle vacuum
script:
  vacuum_toggle:
    alias: Vacuum toggle
    sequence:
      - action: "vacuum.{{ 'start' if is_state('vacuum.vacuum.valetudo_brokenachingdragonfly', 'docked') else 'return_to_dock' }}"
        target:
          entity_id: vacuum.valetudo_brokenachingdragonfly
