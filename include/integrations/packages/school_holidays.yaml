# Package to create the entities needed for the Dutch School Holiday binary sensor using the API provided
# by the Rijksoverheid
# API information: https://www.rijksoverheid.nl/opendata/schoolvakanties

# input_select to select the correct region (North, Middle or South)
input_select:
  region:
    name: Regio Schoolvakanties
    options:
      - Noord
      - Midden
      - Zuid
    icon: mdi:map-marker

# 2 RESTFul sensors to gather the data from the API.
# Data of previous year is used to let the list start with the Summer holiday of the previous year
sensor:
  - platform: rest
    name: Schoolvakanties vorig jaar
    resource_template: >
      {%- set y = now().year %}
      {%- set schoolyear = [y - 2, y - 1] | join('-') if now().month < 8 else [y - 1, y] | join('-') %}
      https://opendata.rijksoverheid.nl/v1/sources/rijksoverheid/infotypes/schoolholidays/schoolyear/{{ schoolyear }}?output=json
    value_template: "{{ value_json.type }}"
    json_attributes_path: "$.content[0]"
    json_attributes:
      - vacations
  - platform: rest
    name: Schoolvakanties huidig jaar
    resource_template: >
      {%- set y = now().year %}
      {%- set schoolyear = [y - 1, y] | join('-') if now().month < 8 else [y, y + 1] | join('-') %}
      https://opendata.rijksoverheid.nl/v1/sources/rijksoverheid/infotypes/schoolholidays/schoolyear/{{ schoolyear }}?output=json
    value_template: "{{ value_json.type }}"
    json_attributes_path: "$.content[0]"
    json_attributes:
      - vacations

# Binary sensor which will be "on" in case it is currently a school holiday.
# The attributes show the selected region, the current holiday and a list with all holidays
template:
  - binary_sensor:
      unique_id: 4d816314-1eaf-41d0-ab16-ec3c57bac38f
      name: Schoolvakantie
      state: >
        {%- set v = state_attr('binary_sensor.schoolvakantie', 'vakanties') %}
        {%- set c = v | selectattr('start', '<=', now().date() | string)
                      | selectattr('end', '>=', now().date() | string)
                      | map(attribute='name') | join
        %}
        {{ iif(c) }}
      attributes:
        regio: "{{ states('input_select.region') }}"
        nu: >
          {%- set v = state_attr('binary_sensor.schoolvakantie', 'vakanties') %}
          {%- set c = v | selectattr('start', '<=', now().date() | string)
                        | selectattr('end', '>=', now().date() | string)
                        | map(attribute='name') | join
          %}
          {{ iif(c, c, 'Geen vakantie') }}
        vakanties: >
          {# data summer holiday last school year #}
            {%- set vs = state_attr('sensor.schoolvakanties_vorig_jaar', 'vacations') %}
            {%- set vs = iif(vs, vs, [ dict(type='error rest sensor vorig jaar') ]) %}
            {%- set r = state_attr('input_select.region', 'options').index(states('input_select.region'))
                        if not states('input_select.region') in [ 'unavailable', 'unknown' ]
                        else 0
            %}
            {%- set n = vs[-1].type.strip() %}
            {%- set s = as_datetime(vs[-1].get('regions', [{},{},{}])[r].get('startdate', 0)).date() | string %}
            {%- set e = as_datetime(vs[-1].get('regions', [{},{},{}])[r].get('enddate', 0)).date() | string %}
            {%- set o = [ dict(name=n, start=s, end=e) ] %}
          {# data school holidays current school year #}
            {%- set vs = state_attr('sensor.schoolvakanties_huidig_jaar', 'vacations') %}
            {%- set vs = iif(vs, vs, [ dict(type='error rest sensor huidig jaar') ]) %}
            {%- set ns = namespace(v = []) %}
            {%- for v in vs %}
              {%- set n = v.type.strip() %}
              {%- set r = 0 if v.get('regions', [ 1 ]) | count == 1 else r %}
              {%- set s = as_datetime(v.get('regions', [{}])[r].get('startdate', 0)).date() | string %}
              {%- set e =  as_datetime(v.get('regions', [{}])[r].get('enddate', 0)).date() | string %}
              {%- set ns.v = ns.v + [ dict(name=n, start=s, end=e) ] %}
            {%- endfor %}
          {# combine data previous year and current year #}
            {{ o + ns.v }}
