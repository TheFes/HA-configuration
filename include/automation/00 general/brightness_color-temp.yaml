id: f0fc0c8c-662d-4477-9002-5ec4b49da7ba
alias: "00 - Change color temperature of lights based on brightness"
mode: parallel
max_exceeded: silent
trigger:
  - platform: state
    entity_id:
      - light.eettafel_template
      - light.pepijn_template
      - light.floris_template
      - light.tv_lamp_template
      - light.speelhoek_template
      - light.bedside_lamp_martijn
    attribute: brightness
variables:
  overrides:
    light.example_light:
      min_ct: 2000
      max_ct: 6500
  name: "{{ trigger.to_state.object_id | replace('_template', '') }}"
  input_boolean_dimmed: "{{ 'input_boolean.dimmed_' + name }}"
  light: "{{ trigger.entity_id }}"
  max_ct: "{{ overrides.get(light, {}).get('max_ct') | default(state_attr(light, 'max_color_temp_kelvin'), true) }}"
  min_ct: "{{ overrides.get(light, {}).get('min_ct') | default(state_attr(light, 'min_color_temp_kelvin'), true) }}"
  br: "{{ trigger.to_state.attributes.brightness }}"
  color_mode: "{{ state_attr(light, 'color_mode') | default('color_temp', true) }}"
condition:
  - alias: "Light on?"
    condition: template
    value_template: "{{ is_state(light, 'on') }}"
  - alias: "Already dimmed before?"
    condition: template
    value_template: "{{ not is_state(input_boolean_dimmed, 'off') }}"
  - alias: "Light on color_temp mode?"
    condition: template
    value_template: "{{ color_mode == 'color_temp' }}"
  - alias: "No transition active"
    condition: template
    value_template: "{{ light not in state_attr('group.transition_active', 'entity_id') or light | replace('_template', '') not in state_attr('group.transition_active', 'entity_id') }}"
action:
  - alias: "Set color temperature based on brightness"
    service: light.turn_on
    target:
      entity_id: "{{ light }}"
    data:
      color_temp_kelvin: >
        {{ [max_ct, min_ct + ((br-1) * (max_ct - min_ct) / 254) | int] | min }}
