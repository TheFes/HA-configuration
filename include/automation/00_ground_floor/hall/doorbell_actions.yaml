id: afcf34ca-7a3e-4f49-a332-9313d2a2eca5
alias: "Actions based on doorbell"
triggers:
  - trigger: state
    entity_id: binary_sensor.smart_doorbell_button
    to: "on"
mode: single
max_exceeded: silent
variables:
  birthday:
    - sensor.anniversary_floris
    - sensor.anniversary_martijn
    - sensor.anniversary_pepijn
    - sensor.anniversary_martijn
  holiday:
    - sensor.anniversary_sinterklaas
  birthday_today: >
    {% set m = state_attr('calendar.m_m', 'message') | lower %}
    {{
      '0' in birthday | map('states') | list
      or
      (
        is_state('calendar.m_m', 'on')
        and 'verjaardag' in m
        and m.split(' ')[1] in ['martijn', 'marleen', 'floris', 'pepijn']
      )
    }}
conditions:
  - alias: "Prevent running too much"
    condition: template
    value_template: "{{ now() - this.attributes.last_triggered | default(0 | as_datetime, true) > timedelta(seconds=30) }}"
actions:
  - alias: "Notification for phones"
    action: notify.all_phones
    data:
      title: "ðŸ”” Ding dong!"
      message: Er staat iemand aan de deur!
      data:
        channel: Deurbel
        importance: high
        priority: high
        ttl: 0
        notification_icon: mdi:bell
  - alias: "Nvidia Shield active?"
    if:
      - not:
          - condition: state
            entity_id: media_player.nvidia_shield
            state: "off"
    then:
      - alias: "Pause Shield"
        action: media_player.media_pause
        target:
          entity_id: media_player.nvidia_shield
  - alias: "Chime off and someone home?"
    choose:
      # Blink lights when chime is off and someone is home
      - conditions:
          - alias: "Chime off?"
            condition: state
            entity_id: switch.smart_doorbell_chime_active
            state: "off"
          - alias: "Someone home?"
            condition: state
            entity_id: sensor.house_mode
            state: "Thuis"
        sequence:
          - parallel:
              - sequence:
                  - variables:
                      light_state: "{{ states('light.voordeur') }}"
                  - alias: "Blink front door light"
                    repeat:
                      count: 8
                      sequence:
                        - action: light.toggle
                          target:
                            entity_id: light.voordeur
                        - delay: 1
                  - alias: "Restore state"
                    action: light.turn_{{ light_state }}
                    target:
                      entity_id: light.voordeur
              - alias: "Blink lights using script"
                action: script.turn_on
                target:
                  entity_id: script.light_blink_alert
      # Blink front door light when nobody is home
      - conditions:
          - alias: "Chime not active"
            condition: state
            entity_id: switch.smart_doorbell_chime_active
            state: "off"
          - alias: "Nobobdy home?"
            condition: state
            entity_id: sensor.house_mode
            state: "Afwezig"
        sequence:
          - alias: "Blink front door light"
            action: light.turn_on
            target:
              entity_id: light.voordeur
            data:
              effect: Slow Pulse
      - conditions:
          - alias: "Chime active"
            condition: state
            entity_id: switch.smart_doorbell_chime_active
            state: "on"
          - alias: "Someone home"
            condition: numeric_state
            entity_id: zone.home
            above: 0
        sequence:
          - variables:
              name_a: >
                {{
                  expand(birthday)
                    | selectattr('state', 'eq', '0')
                    | map(attribute='object_id')
                    | map('replace', 'anniversary_', '')
                    | join
                }}
              name_c: >
                {% set m = state_attr('calendar.m_m', 'message') %}
                {{ m.split(' ')[1:] | join(' ') }}
              name: "{{ name_a or name_c }}"
              sound: "{{ 'roltong.mp3' if birthday_today else 'dingdong.mp3' }}"
              message: >
                Er staat iemand aan de deur! {{ ('Misschien is het wel visite voor ' ~ name ~ '!') if birthday_today }}
              sat_id: >
                {% set reject_list = ['assist_satellite.m5stack_atom_echo_d4e7f8_assist_satellite', 'assist_satellite.grandstream'] %}
                {% set reject_list = (reject_list + ['assist_satellite.pepijn']) if is_state('binary_sensor.pepijn_sleeping', 'on') else reject_list %}
                {% set reject_list = (reject_list + ['assist_satellite.floris']) if is_state('binary_sensor.floris_sleeping', 'on') else reject_list %}
                {{
                  states.assist_satellite
                    | map(attribute='entity_id')
                    | reject('in', reject_list)
                    | list
                }}
              vol: >
                {% set id = sat_id | map('device_id') | map('device_entities') | flatten | select('match', 'media_player.') | select('has_value') | list %}
                {% set vol = id | map('state_attr', 'volume_level') | map('round', 2) | list %}
                {{ zip(id, vol) | list}}
          - alias: Set all players to at least 80%
            repeat:
              for_each: "{{ vol }}"
              sequence:
                - alias: Set all player to at least 80%
                  action: media_player.volume_set
                  target:
                    entity_id: "{{ repeat.item[0] }}"
                  data:
                    volume_level: "{{ [0.8, repeat.item[1]] | max }}"
          - alias: Make sure soundbar is ready
            if: "{{ 'assist_satellite.woonkamer' in sat_id }}"
            then:
              - alias: Turn soundbar on in case it wasn't already
                action: media_player.turn_on
                target:
                  entity_id: media_player.samsung_soundbar
              - alias: Make sure soundbar is on
                wait_template: "{{ not 'media_player.samsung_soundbar' | has_value or state_attr('media_player.samsung_soundbar', 'volume_level') is not none }}"
              - alias: Set soundbar to the correct source
                action: media_player.select_source
                data:
                  source: aux
                target:
                  entity_id: media_player.samsung_soundbar
              - alias: Store volume level
                variables:
                  sb_vol: "{{ state_attr('media_player.samsung_soundbar', 'volume_level') | default(0.5, true) }}"
              - alias: Set volume to at least 0.5
                action: media_player.volume_set
                target:
                  entity_id: media_player.samsung_soundbar
                data:
                  volume_level: "{{ [0.5, sb_vol] | max }}"
          - alias: Send announcement
            action: assist_satellite.announce
            data:
              preannounce_media_id: media-source://media_source/local/misc/{{ sound }}
              message: "{{ message }}"
            target:
              entity_id: "{{ sat_id }}"
          - alias: Wait until at least one satellite is responding
            wait_template: "{{ sat_id | select('is_state', 'responding') | list | count > 0 }}"
            timeout: "00:00:01"
            continue_on_timeout: true
          - alias: Wait until no satellite is responding
            wait_template: "{{ sat_id | select('is_state', 'responding') | list | count == 0 }}"
            timeout: "00:00:10"
            continue_on_timeout: true
          - alias: Set all players to orignal volume
            repeat:
              for_each: "{{ vol }}"
              sequence:
                - alias: Set all player to original volume
                  action: media_player.volume_set
                  target:
                    entity_id: "{{ repeat.item[0] }}"
                  data:
                    volume_level: "{{ repeat.item[1] }}"
          - alias: Restore volume soundbar
            if: "{{ 'assist_satellite.woonkamer' in sat_id }}"
            then:
              - alias: Set soundbar back to original volume
                action: media_player.volume_set
                target:
                  entity_id: media_player.samsung_soundbar
                data:
                  volume_level: "{{ sb_vol }}"
