rest_command:
  postcodeloterij:
    url: https://www.postcodeloterij.nl/public/rest/drawresults/winnings/NPL/P_MT_P{{ month | default((now().replace(day=1) - timedelta(days=1)).strftime("%Y%m")) }}/?resultSize=10
    method: POST
    # format for the payload is "query=1234AB" where 1234AB is the postal code
    payload: !secret postcodeloterij
    headers:
      Content-Type: application/x-www-form-urlencoded
      User-Agent: "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36"

template:
  - trigger:
      # the sensor will be automatically updated on the first 3 days of the month, after 18:00
      - trigger: template
        at: "18:00"
        # you can use the event below in developer tools > events to manually update the sensor
      - trigger: event
        event_type: update_postcodeloterij_prizes
    condition:
      - condition: template
        value_template: "{{ now().day in [1,2,3] }}"
    action:
      - variables:
          month: >
            {{
              trigger.event.data.month | int
              if
                trigger.platform == 'event'
                and trigger.event.data is defined
                and 'month' in trigger.event.data
              else
                (now().replace(day=1) - timedelta(days=1)).strftime("%Y%m") | int
            }}
          month_formatted: >
            {% set months = ['januari', 'februari', 'maart', 'april', 'mei', 'juni', 'juli', 'augustus', 'september', 'october', 'november', 'december'] %}
            {{ months[month % 100 -1] ~ ' ' ~ month // 100 }}
      - action: rest_command.postcodeloterij
        data:
          month: "{{ month }}"
        response_variable: prizes
      - variables:
          prizecount: "{{ prizes.content.prizeCount }}"
          prizes: >
            {% set ns = namespace(prizes=[]) %}
            {% for p in prizes.content.wonPrizes %}
              {% set ns.prizes = ns.prizes + [p.description ~ ' (€ ' ~'{:.2f}'.format(p.prizeValue / 100) ~ ')'] %}
            {% endfor %}
            {{ ns.prizes }}
        # a notification will be sent out if something is won, and it's the first time the sensor was updated this month
        # notification parameters are optimized for the Android companion app
      - if: >
          {{
            prizecount | default(0) > 0
            and month_formatted != state_attr('sensor.postcodeloterij', 'month')  
          }}
        then:
          - alias: "Send notification"
            action: notify.mobile_app_pixel_7_pro
            data:
              title: "🎁 Winnen doe je bij..."
              message: >
                {% set m = 'prijs' if prizecount == 1 else (prizecount ~ ' prijzen') %}
                We hebben {{ m }} in de trekking van {{ month_formatted }}: {{ prizes | join(', ') }}
              data:
                channel: LotteryPrize
                ttl: 0
                priority: high
                notification_icon: mdi:gift
                tag: LotteryPrize
    sensor:
      - name: Postcodeloterij
        unique_id: 12f71395-3d76-434a-a3d0-9f01a03b834c
        icon: "{{ 'mdi:gift' if prizecount > 0 else 'mdi:emoticon-cry' }}"
        state: "{{ prizecount }}"
        attributes:
          prizes: "{{ prizes }}"
          month: "{{ month_formatted }}"
          last_updated: "{{ now().strftime('%d-%m-%Y %H:%M') }}"
