template_lights_actions:
  alias: 00 - Template Light Actions
  sequence:
    - variables:
        light: "{{ template_light | regex_replace('_template', '') }}"
        built_in_effect: "{{ state_attr(light, 'effect_list') | default([], true) }}"
        room: "{{ template_light | regex_replace('light.|_template', '') }}"
        script: "{{ 'script.' ~ room ~ '_toggle' }}"
        switch: >
          {% set switch = states.switch
              | selectattr('object_id', 'search', room ~ '_relay')
              | map(attribute='entity_id')
              | list 
          %}
          {{ switch | first if switch else none }}
    - choose:
        - conditions: "{{ action == 'turn_on' }}"
          sequence:
            - if: >
                {{ states('light.' ~ room) | bool('na') is boolean }}
              then:
                - if: "{{ script | has_value }}"
                  then:
                    - service: "{{ script }}"
                      data:
                        action: "on"
                  else:
                    - service: light.turn_on
                      target:
                        entity_id: "{{ light }}"
              else:
                - service: switch.turn_on
                  target:
                    entity_id: "{{ switch }}"
        - conditions: "{{ action == 'turn_off' }}"
          sequence:
            - if: >
                {{
                  states('light.' ~ room) | bool('na') is boolean
                  and not is_state('sensor.house_mode', 'Vakantie')
                }}
              then:
                - if: "{{ script | has_value }}"
                  then:
                    - service: "{{ script }}"
                      data:
                        action: "off"
                  else:
                    - service: light.turn_off
                      target:
                        entity_id: "{{ light }}"
              else:
                - service: switch.turn_off
                  target:
                    entity_id: "{{ switch }}"
        - conditions: "{{ action == 'set_level' }}"
          sequence:
            - service: light.turn_on
              data:
                entity_id: "{{ light }}"
                brightness: >
                  {% if light in integration_entities('esphome') %}
                    {{ (brightness | float * 0.855 + 255*0.145) | round }}
                  {% else %}
                    {{ brightness }}
                  {% endif %}
        - conditions: "{{ action == 'set_effect' }}"
          sequence:
            - choose:
                - conditions: "{{ effect in built_in_effect }}"
                  sequence:
                    - service: light.turn_on
                      target:
                        entity_id: "{{ light }}"
                      data:
                        effect: "{{ effect }}"
                - conditions: "{{ effect is not none }}"
                  sequence:
                    - service: script.turn_on
                      target:
                        entity_id: script.light_blink
                      data:
                        variables:
                          light: "{{ this.entity_id }}"
                          toggle_entity: "{{ light }}"
                          effect: "{{ effect }}"
              default:
                - service: light.turn_on
                  target:
                    entity_id: "{{ light }}"
                  data:
                    effect: None
