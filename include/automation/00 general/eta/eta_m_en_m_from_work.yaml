id: 376b6b93-e8ed-43cf-89e3-1b915e5ff236
alias: "00 - Send notification when Martijn or Marleen leaves from work"
mode: parallel
max_exceeded: silent
trigger:
  - platform: state
    entity_id: person.marleen
    from: !secret work_marleen
    to: "not_home"
  - platform: state
    entity_id: person.martijn
    from: !secret work_martijn
    to: "not_home"
  - platform: state
    entity_id:
      - person.martijn
      - person.marleen
    to:
      - "home"
      - !secret work_marleen
      - !secret work_martijn
    id: "reset"
variables:
  name: "{{ states[trigger.entity_id].object_id }}"
  notify: "{{ 'notify.mobile_app_marleen_app' if name == 'martijn' else 'notify.mobile_app_pixel_7_pro' }}"
  gender: "{{ 'hij' if name == 'martijn' else 'ze' }}"
  sensor: "sensor.{{ name }}_naar_huis"
  vehicle: "{{ 'fiets' if is_state('input_boolean.martijn_fiets', 'on') and is_state('binary_sensor.pixel_7_pro_android_auto', 'off') and name == 'martijn' else 'auto' }}"
  eta: >
    {%- set delta = 40 if vehicle == 'fiets' else states(sensor) | float %}
    {{ (now() + timedelta(minutes=delta)).strftime('%H:%M') }}
  work:
    martijn: !secret work_martijn
    marleen: !secret work_marleen
action:
  - if: "{{ trigger.id == 'reset' }}"
    then:
      - event: remove_variable
        event_data:
          key: "eta_{{ name }}"
    else:
      - service: homeassistant.update_entity
        target:
          entity_id: "{{ sensor }}"
      - alias: "Send notification to phone"
        service: "{{ notify }}"
        data:
          title: "{{ name | capitalize }} is onderweg {{ (' met de ' ~ vehicle) if name == 'martijn' else ''}}"
          message: "Als {{ gender }} meteen naar huis komt is {{ gender }} er om {{ eta }}"
          data:
            channel: ETA
            ttl: 0
            priority: high
            notification_icon: "{{ 'mdi:bike' if vehicle == 'fiets' else 'mdi:car'}}"
      - event: set_variable
        event_data:
          key: "eta_{{ name }}"
          value: "{{ '🚴‍♂️' if vehicle == 'fiets' else '🚗'}} ETA {{ name | title }}: {{ eta }}"
          set_timestamp: false
      - if: "{{ vehicle == 'auto' }}"
        then:
          - repeat:
              until: "{{ is_state(trigger.entity_id, [work[name], 'home']) }}"
              sequence:
                - service: homeassistant.update_entity
                  target:
                    entity_id: "{{ sensor }}"
                - variables:
                    eta: "{{ (now() + timedelta(minutes=states(sensor))|float).timestamp() }}"
                - wait_for_trigger:
                    - platform: template
                      value_template: "{{ is_state(trigger.entity_id, [work[name], 'home']) }}"
                    - platform: template
                      value_template: "{{ ((now() + timedelta(minutes=states(sensor))|float).timestamp() - eta) > 300 }}"
                      id: delay
                - if: "{{ wait.trigger.id == 'delay' }}"
                  then:
                    - alias: "Send notification to phone"
                      service: "{{ notify }}"
                      data:
                        title: "{{ name | capitalize }} is vertraagd"
                        message: "{{ gender | capitalize }} zou er nu rond {{ (now() + timedelta(minutes=states(sensor) | float)).strftime('%H:%M') }} moeten zijn"
                        data:
                          channel: ETA
                          ttl: 0
                          priority: high
                          notification_icon: mdi:car
