id: 55509fd0-bdce-4cd2-86dc-2a8bee22b1b0
alias: "F1P - Turn graafmachine orange or green just before wake time"
mode: queued
trigger:
  - platform: template
    value_template: >
      {% set end = today_at(states('input_datetime.pepijn_time_awake')) %}
      {% set start = end - timedelta(minutes=states('input_number.leestijd_pepijn')|int) %}
      {{ start < now() < end }}
    id: orange
  - platform: time
    at: input_datetime.pepijn_time_awake
    id: green
  - platform: time
    at: "21:00:00"
    id: time_check
  - platform: state
    entity_id: button.set_time
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: "pepijn_alarm_reset"
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: "pepijn_alarm_earlier"
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: "pepijn_alarm_later"
condition:
  not:
    - alias: "Not on holiday"
      condition: state
      entity_id: sensor.house_mode
      state: "Vakantie"
action:
  - choose:
      - conditions: "{{ trigger is defined and  trigger.get('id') == 'orange' }}"
        sequence:
          - service: script.turn_on
            target:
              entity_id: script.transition_lights
            data:
              variables:
                lights:
                  - light.graafmachine
                br_start: 1
                br_end: 255
                rgb_start:
                  - 255
                  - 165
                  - 0
                use_ct: false
                duration: "{{ (today_at(states('input_datetime.pepijn_time_awake')) - now()).seconds }}"
                split_service: true
                max_steps: 90
      - conditions: "{{ trigger is defined and trigger.get('id') == 'green' }}"
        sequence:
          - service: script.turn_on
            target:
              entity_id: script.transition_lights
            data:
              variables:
                lights:
                  - light.graafmachine
                use_br: false
                use_ct: false
                br_start: 255
                rgb_start:
                  - 255
                  - 165
                  - 0
                rgb_end:
                  - 0
                  - 255
                  - 0
                duration: 10
                mode: parallel
                split_service: true
    default:
      - delay: "{{ 0.5 if trigger is defined and trigger.get('platform') == 'event' else 0 }}"
      - service: button.press
        target:
          entity_id: button.set_time
