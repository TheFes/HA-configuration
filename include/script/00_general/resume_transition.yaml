resume_transition_lights:
  alias: "Resume transition light brightness, color temperature and/or RGB values"
  icon: mdi:brightness-percent
  mode: parallel
  max: 20
  max_exceeded: silent
  fields:
    light:
      description: "Select the light to resume"
      name: Light
      example: light.livingroom
      required: true
      selector:
        entity:
          domain: light
    ignore:
      description: "Variables to ignore, enter a comma seperated string"
      name: Ignore
      example: "rgb_start, br_start"
      required: false
      selector:
        text:
  sequence:
    - variables:
        transition_data: >
          {% set ignore_list = (ignore | default('', true) | replace(' ', '')).split(',') %}
          {% set data = state_attr('sensor.active_transition', 'transition_data')  | default([], true) %}
          {% set n = now() %}
          {% set data = data | selectattr('light', 'eq', light) | selectattr('end_time', '>', n.isoformat()) | list %}
          {% if iif(data) %}
            {% set data = data | first %}
            {% set duration = (as_datetime(data.end_time) - n).seconds %}
            {% set ignore_list = ignore_list + [ 'end_time', 'light' ] %}
            {% set add = dict(duration=duration, lights=data.light) %}
            {{ dict(data.items() | rejectattr('0', 'in', ignore_list), **add) }}
          {% endif %}
    - if: "{{ iif(transition_data) }}"
      then:
        - alias: "Call the script"
          service: script.turn_on
          target:
            entity_id: script.transition_lights
          data:
            variables: "{{ transition_data }}"
